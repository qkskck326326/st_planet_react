"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/axiosApi/axiosClient.js":
/*!*************************************!*\
  !*** ./src/axiosApi/axiosClient.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   axiosClient: function() { return /* binding */ axiosClient; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @swc/helpers/_/_async_to_generator */ \"./node_modules/@swc/helpers/esm/_async_to_generator.js\");\n/* harmony import */ var _swc_helpers_ts_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/_/_ts_generator */ \"./node_modules/@swc/helpers/esm/_ts_generator.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\n\n\nvar axiosClient = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: \"http://localhost:8080/api\",\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n// 요청 인터셉터\n// /reissue 요청 외의 모든 요청의 헤더에 Authorization 라는 이름으로 token을 넣어서 전송한다.\naxiosClient.interceptors.request.use(function(config) {\n    if (config.url !== \"/auth/reissue\") {\n        var token = localStorage.getItem(\"token\");\n        if (token) {\n            config.headers[\"Authorization\"] = \"Bearer \".concat(token);\n            console.log(\"token was added\");\n        }\n    }\n    return config;\n}, function(error) {\n    return Promise.reject(error);\n});\n//** acces 토큰을 refresh 토큰을 이용하여 새로 발급받는 메소드  **//\n// 헤더에 Authorization 라는 이름으로 refreshToken을 /reissue 엔드포인트로 반환,\n// 서버로부터 새로운 access토큰을 헤더로, refresh토큰을 data로 반환받는다\nvar getNewAccessToken = function() {\n    var _ref = (0,_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_1__._)(function() {\n        var refreshToken, response, newAccessToken, newRefreshToken, error;\n        return (0,_swc_helpers_ts_generator__WEBPACK_IMPORTED_MODULE_2__._)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    console.log(\"accessToken 재발급 절차 진행\");\n                    _state.label = 1;\n                case 1:\n                    _state.trys.push([\n                        1,\n                        3,\n                        ,\n                        4\n                    ]);\n                    refreshToken = localStorage.getItem(\"refresh\");\n                    console.log(\"Reissue request sent with refresh token:\", refreshToken);\n                    return [\n                        4,\n                        axiosClient.post(\"/auth/reissue\", null, {\n                            headers: {\n                                Authorization: \"Bearer \".concat(refreshToken)\n                            }\n                        })\n                    ];\n                case 2:\n                    response = _state.sent();\n                    console.log(\"Reissue response received:\", response);\n                    // 응답 바디에서 액세스 토큰을 추출합니다.\n                    newAccessToken = response.data.accessToken; // 서버가 액세스 토큰을 응답 바디에 포함하도록 해야 함\n                    if (!newAccessToken) {\n                        throw new Error(\"Access token missing in reissue response\");\n                    }\n                    localStorage.setItem(\"token\", newAccessToken);\n                    // 서버에서 반환한 새로운 리프레시 토큰이 있는 경우 저장\n                    newRefreshToken = response.data.refresh; // 서버가 리프레시 토큰을 응답 바디에 포함하도록 해야 함\n                    if (newRefreshToken) {\n                        localStorage.setItem(\"refresh\", newRefreshToken);\n                    }\n                    return [\n                        2,\n                        newAccessToken\n                    ];\n                case 3:\n                    error = _state.sent();\n                    if (error.response && error.response.data.error === \"Refresh token is invalid or expired\") {\n                        logout();\n                    } else {\n                        console.error(\"An error occurred:\", error);\n                    }\n                    return [\n                        2,\n                        null\n                    ];\n                case 4:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return function getNewAccessToken() {\n        return _ref.apply(this, arguments);\n    };\n}();\n// 응답 인터셉터\n// 서버로부터 돌아온 응답을 가로채어 정상적인 response라면 그대로 반환, \n// 에러가 발생하면 에러발생시 error.config 로 돌아오는 요청 객체를 originalRequest에 저장, \n// 만약 엑세스 토큰이 만료되었다는 에러인 401 에러가 발생하면 getNewAccessToken() 메소드를 실행, access토큰을 재발급 요청하고,\n// 해당 요청에서 401 에러 발생시(refreshToken 또한 expired) 무한 루프로 들어가기 떄문에 \n// originalRequest._retry 라는 설정되지 않은(false or undefined 반환)속성을 새로 flag로 사용하여, 무한루프를 방지하며,  \n// 새롭게 발급받은 access토큰을 헤더에 넣어 실패한 요청을 다시 요청하고, access토큰을 로컬 스토리지에 저장한다.\naxiosClient.interceptors.response.use(function(response) {\n    return response;\n}, function() {\n    var _ref = (0,_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_1__._)(function(error) {\n        var originalRequest, newAccessToken;\n        return (0,_swc_helpers_ts_generator__WEBPACK_IMPORTED_MODULE_2__._)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    originalRequest = error.config;\n                    if (!error.response) return [\n                        3,\n                        3\n                    ];\n                    if (!(error.response.status === 401 && !originalRequest._retry)) return [\n                        3,\n                        2\n                    ];\n                    originalRequest._retry = true;\n                    return [\n                        4,\n                        getNewAccessToken()\n                    ];\n                case 1:\n                    newAccessToken = _state.sent();\n                    if (newAccessToken) {\n                        originalRequest.headers[\"Authorization\"] = \"Bearer \".concat(newAccessToken);\n                        return [\n                            2,\n                            axiosClient(originalRequest)\n                        ];\n                    }\n                    _state.label = 2;\n                case 2:\n                    if (error.response.status === 403) {\n                        logout();\n                        return [\n                            2,\n                            new Promise(function() {})\n                        ]; // 새로운 빈 Promise 반환하여 후속 처리가 되지 않게 함\n                    }\n                    _state.label = 3;\n                case 3:\n                    return [\n                        2,\n                        Promise.reject(error)\n                    ];\n            }\n        });\n    });\n    return function(error) {\n        return _ref.apply(this, arguments);\n    };\n}());\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/axiosApi/axiosClient.js\n"));

/***/ })

});